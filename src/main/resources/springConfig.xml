<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
">
<!--    =========================================spring========================================-->
<!--    配置spring扫描所有的包，带controller注解的除外-->
    <context:component-scan base-package="com.twice">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    载入配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

<!--    配置数据库连接池-->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

<!--    配置批量的SqlSession语句-->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

<!--    =========================================spring和MyBatis整合========================================-->


<!--    配置spring和MyBatis整合-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
<!--        注入MyBatis配置文件位置-->
        <property name="configLocation" value="classpath:MyBatisConfig.xml"/>
<!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
<!--        注入MyBatis映射文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

<!--    配置扫描器，将Mybatis接口的实现注入到IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="configurer">
<!--        扫描接口的实现-->
        <property name="basePackage" value="com.twice.crud.mapper"/>
    </bean>

<!--    =========================================配置事务========================================-->

<!--    配置事务的控制-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
<!--        控制数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    开启注解的事务，使用xml配置形式的事务（必要主要都是使用xml）-->
    <aop:config>
<!--        切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution(* com.twice.crud.service..*(..))"/>
<!--        配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
<!--            使所用的方法都是事务方法-->
            <tx:method name="*"/>
<!--            配置以get开始的所用方法-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>